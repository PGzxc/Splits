apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.example.splits"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    splits {
        //按屏幕密度打包
        density {
            enable true //enable： 启用屏幕密度拆分机制
            exclude "ldpi", "tvdpi", "xxxhdpi" //exclude： 默认情况下所有屏幕密度都包括在内，你可以移除一些密度
            include "hdpi", "xhdpi", "mdpi"//表示要包括哪些屏幕密度
            //reset() // 重置屏幕密度列表为只包含一个空字符串 （这能够实现，在与include一起使用时可以表示使用哪一个屏幕密度，而不是要忽略哪一些屏幕密度）
            compatibleScreens 'small', 'normal', 'large', 'xlarge'
            //表示兼容屏幕的列表。这将会注入到manifest中匹配的 <compatible-screens> <screen> 节点。这个设置是可选的
        }
        //按abi打包
        abi {
            enable true //启用ABI拆分机制
            exclude 'x86' //默认情况下所有ABI都包括在内，你可以移除一些ABI
            reset() //重置ABI列表为只包含一个空字符串（这可以实现，在与include一起使用来可以表示要使用哪一个ABI，而不是要忽略哪一些ABI）
            include 'armeabi-v7a', 'mips' //指明要包含哪些ABI
            universalApk true //指示是否打包一个通用版本（包含所有的ABI）。默认值为 false
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
